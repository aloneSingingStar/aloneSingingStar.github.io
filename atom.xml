<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aloneSiningStar的博客</title>
  
  <subtitle>砥砺前行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://alonesingingstar.site/"/>
  <updated>2017-09-26T07:19:14.000Z</updated>
  <id>http://alonesingingstar.site/</id>
  
  <author>
    <name>aloneSingingStar</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tigase开发--Tigase服务器搭建</title>
    <link href="http://alonesingingstar.site/Tigase%E5%BC%80%E5%8F%91-Tigase%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html"/>
    <id>http://alonesingingstar.site/Tigase开发-Tigase服务器搭建.html</id>
    <published>2017-09-26T06:52:30.000Z</published>
    <updated>2017-09-26T07:19:14.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1.下载安装包"></a>1.下载安装包</h3><p><strong>下载地址：</strong> <a href="https://projects.tigase.org/projects/tigase-server/files" target="_blank" rel="external">安装包下载地址</a></p><p><strong>安装包说明：</strong> 不同后缀的安装包对应不同操作系统、或者不同的安装方式，比如tigase-server-7.1.1-b4457-javadoc.jar适用与GUI方式安装(一步步都有图像界面那种)、同样也可以用于ssh远程到服务器，控制台安装。tigase-server-7.1.1-b4457-dist-max.tar.gz适用与WEB页面方式安装等</p><p><strong>安装文档说明：</strong> 一切安装步骤以官方文档为准，可以将下载好的包解压（jar包可以将.jar改为.zip，解压即可看到文档），文档目录在docs目录，比如GUI方式安装的文档路径如下：docs/Administration_Guide/html/index.html#guiinstall<br><a id="more"></a></p><h3 id="2-安装前准备"><a href="#2-安装前准备" class="headerlink" title="2.安装前准备"></a>2.安装前准备</h3><p><strong>安装数据库：</strong> MySQL、PostgreSQL、SQL Server、Derby选一种你想用的</p><p><strong>基本环境:</strong> jdk安装</p><h3 id="3-安装过程需要注意的问题"><a href="#3-安装过程需要注意的问题" class="headerlink" title="3. 安装过程需要注意的问题"></a>3. 安装过程需要注意的问题</h3><p><strong>安装步骤：</strong> 根据你选择的安装方式，查看对应的官方文档，我选择的是最简单的GUI方式，文档路径:docs/Administration_Guide/html/index.html#guiinstall</p><p><strong>注意点1：</strong> Basic Server Configuration（基本服务配置）</p><img src="/Tigase开发-Tigase服务器搭建.html/serverConfiguration.gif" alt="Server Configuration" title="Server Configuration"><ul><li>Your XMPP(Jabber) domains:自定义xmpp域名，比如veloci.tigase.org</li><li>Server administrators:管理员账号（在数据库注册的第一个用户），格式为：名称@自定义的域名，比如admin@veloci.tigase.org<br>账户名称必须是：名称@自定义的域名,自定义的域名部门必须与Your XMPP(Jabber) domains中定义的一致，否则登录会报authentication相关的错</li></ul><p><strong>注意点2：</strong> Tigase数据库安装</p><img src="/Tigase开发-Tigase服务器搭建.html/tigasedb.jpg" alt="Server Configuration" title="Server Configuration"><p>成功后，会在本地mysql数据库生成tigasedb数据库，其中可以在tig_users表中看到之前注册的Server administrators:管理员账号(在这个数据库中存在的用户，可以用来登录)</p><h3 id="4-启动Tigase服务，验证安装是否成功"><a href="#4-启动Tigase服务，验证安装是否成功" class="headerlink" title="4.启动Tigase服务，验证安装是否成功"></a>4.启动Tigase服务，验证安装是否成功</h3><p>启动MySQL服务，确保MySQL数据库可连接</p><p>进入安装Tigase后生成的目录，执行：./scripts/tigase.sh start etc/tigase.conf，启动服务</p><p>网页中访问：<a href="http://localhost:8080/ui,如果不能访问，可能是因为安装时，少装了HTTP相关组件，这样的话，就可以安装一个客户端，比如psi来登录验证，在页面中输入：Server" target="_blank" rel="external">http://localhost:8080/ui,如果不能访问，可能是因为安装时，少装了HTTP相关组件，这样的话，就可以安装一个客户端，比如psi来登录验证，在页面中输入：Server</a> administrators:管理员账号、密码，如果能登录进入，说明安装成功，如果不能，请检查安装配置</p><h3 id="5-关于SSL握手证书及Android客户端信任库证书"><a href="#5-关于SSL握手证书及Android客户端信任库证书" class="headerlink" title="5.关于SSL握手证书及Android客户端信任库证书"></a>5.关于SSL握手证书及Android客户端信任库证书</h3><p>安装目录下certs目录中存放着证书，当我们使用第一个用户（一般是管理员）登录时，用户发起SSL连接，服务器会首先检查你是否在certs目录放入【你自定义的域名.pem】格式的证书，如果没有，则生成一个[你自定义的域名.pem]格式的证书，然后发送给客户端，然后由客户端决定是否信任这个证书，比如用PSI客户端登录，会弹出框体，让你查看该证书的详细信息，并且让你决定是否信任证书。而在Android中，则需要我们先在本地生成一个信任库，然后将该服务器证书导入到信任库中，每次登录时，Android客户端先会在信任库中检查是否有该证书，有则信任，不信任，则拒绝连接，这个需要代码来实现。</p><p>自签名证书制作、客户端信任库制作：<br>官方文档：docs/Administration_Guide/html/index.html#ServerCertificates</p><ul><li><p>1.Generate local private key.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl genrsa -out[自定义域名.key] 1024</div></pre></td></tr></table></figure></li><li><p>2.Generate a certificate request:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req -new -key 自定义域名.key -out 自定义域名.csr</div></pre></td></tr></table></figure></li></ul><p>这一步会让你填写相关信息，比如所在国家、城市、公司信息等，其中最重要的一点是Common Name,这里填上你自定义的域名，不然客户端登录时会报：Cerificate hostname doesn’t match domain name you want to connect</p><ul><li><p>3.Sign the Certificate Request（self-signing）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl x509 -req -days 365 -in 自定义域名.csr -signkey 自定义域名.key -out 自定义域名.crt</div></pre></td></tr></table></figure></li><li><p>4.Generate PEM file</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cat 自定义域名.crt 自定义域名.key &gt; 自定义域名.pem</div><div class="line"></div><div class="line">如果是第三方授权的证书，则需要导入证书链，格式如下，例如，如果您有来自XMPP联盟的证书，则需要下载StartCom根证书和中间ICA证书。</div><div class="line">cat 自定义域名.crt 自定义域名.key sub.class1.xmpp.ca.crt ca.crt &gt; 自定义域名.pem</div></pre></td></tr></table></figure></li><li><p>5.Android客户端生成truststore，并导入受信任的服务器证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">要生成bks证书，需要bcprov-ext-jdk15on-151.jar。且将该文件放到/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/lib目录下。</div><div class="line"></div><div class="line">执行如下命令：</div><div class="line">keytool -importcert -trustcacerts -keystore client_trust.bks -file 自定义域名.crt -storetype BKS -provider org.bouncycastle.jce.provider.BouncyCastleProvider</div></pre></td></tr></table></figure></li><li><p>6.将生成的bks文件放入Android代码的res/raw文件夹下，然后写代码进行ssl握手</p></li></ul>]]></content>
    
    <summary type="html">
    
      tigase,tigase服务器,xmpp
    
    </summary>
    
      <category term="tigase" scheme="http://alonesingingstar.site/categories/tigase/"/>
    
    
      <category term="tigase" scheme="http://alonesingingstar.site/tags/tigase/"/>
    
      <category term="xmpp" scheme="http://alonesingingstar.site/tags/xmpp/"/>
    
      <category term="tigase服务" scheme="http://alonesingingstar.site/tags/tigase%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="http://alonesingingstar.site/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://alonesingingstar.site/hexo搭建博客.html</id>
    <published>2017-09-10T05:48:42.000Z</published>
    <updated>2017-09-26T08:02:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-在github上新建项目："><a href="#1-在github上新建项目：" class="headerlink" title="1.在github上新建项目："></a>1.在github上新建项目：</h3><p><strong>项目名称：</strong>github用户名称.github.io<br>example: aloneSingingStar.github.io</p><p><strong>注意:</strong>最好创建空项目，不带一个文件</p><h3 id="2-本地新建目录"><a href="#2-本地新建目录" class="headerlink" title="2.本地新建目录"></a>2.本地新建目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">随意创建，我的是aloneSingingStar.github.io</div></pre></td></tr></table></figure><h3 id="3-进入aloneSingingStar-github-io目录，初始化hexo"><a href="#3-进入aloneSingingStar-github-io目录，初始化hexo" class="headerlink" title="3.进入aloneSingingStar.github.io目录，初始化hexo"></a>3.进入aloneSingingStar.github.io目录，初始化hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure><a id="more"></a><h3 id="4-安装依赖"><a href="#4-安装依赖" class="headerlink" title="4.安装依赖"></a>4.安装依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure><h3 id="5-安装博客部署插件"><a href="#5-安装博客部署插件" class="headerlink" title="5.安装博客部署插件"></a>5.安装博客部署插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure><h3 id="6-配置-comfig-xml，设置部署分支为master"><a href="#6-配置-comfig-xml，设置部署分支为master" class="headerlink" title="6.配置_comfig.xml，设置部署分支为master"></a>6.配置_comfig.xml，设置部署分支为master</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:aloneSingingStar/aloneSingingStar.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure><h3 id="7-将项目添加到github"><a href="#7-将项目添加到github" class="headerlink" title="7.将项目添加到github"></a>7.将项目添加到github</h3><ul><li><p>初始化为git项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure></li><li><p>添加该目录下的所有文件到本地仓库（会根据.ignore文件过滤）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add .</div></pre></td></tr></table></figure></li><li><p>提交代码到本地仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m ‘初始化hexo’</div></pre></td></tr></table></figure></li><li><p>关联本地仓库代码到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin git@github.com:aloneSingingStar/aloneSingingStar.github.io.git</div></pre></td></tr></table></figure></li><li><p>提交本地仓库代码到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push -u origin master -f (必须加上-f,而且执行这句后，之前在github上的原有文件会丢失)</div></pre></td></tr></table></figure></li></ul><p>在github上创建项目时，里面有一个readme.md文件，而本地项目git init时，里面没有这个文件，当使用（git push -u origin master）把本地文件提交上，就会有如下问题：<br>To github.com:aloneSingingStar/aloneSingingStar.github.io.git<br> ! [rejected]        master -&gt; master (non-fast-forward)<br>error: failed to push some refs to ‘git@github.com:aloneSingingStar/aloneSingingStar.github.io.git’<br>hint: Updates were rejected because the tip of your current branch is behind<br>hint: its remote counterpart. Integrate the remote changes (e.g.<br>hint: ‘git pull …’) before pushing again.<br>hint: See the ‘Note about fast-forwards’ in ‘git push –help’ for details.</p><h3 id="8-在本地和远程创建hexo分支-并且本地切换到hexo分支-并拉取代码"><a href="#8-在本地和远程创建hexo分支-并且本地切换到hexo分支-并拉取代码" class="headerlink" title="8.在本地和远程创建hexo分支,并且本地切换到hexo分支,并拉取代码"></a>8.在本地和远程创建hexo分支,并且本地切换到hexo分支,并拉取代码</h3><ul><li><p>本地仓库创建hexo分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b hexo</div></pre></td></tr></table></figure></li><li><p>推送本地hexo分支到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin hexo</div></pre></td></tr></table></figure></li><li><p>从远程hexo分支拉取代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull origin hexo</div></pre></td></tr></table></figure></li></ul><p>(从hexo分支拉取代码，git pull无效果，可以git branch –set-upstream-to=origin/hexo(跟踪hexo的流)，并且git branch –unset-upstream master(取消对master的跟踪)，这样的话，就可以直接执行git pull、git push直接提交代码到hexo分支)</p><h3 id="9-启动本地服务器测试"><a href="#9-启动本地服务器测试" class="headerlink" title="9.启动本地服务器测试"></a>9.启动本地服务器测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo server</div><div class="line"></div><div class="line">访问 http://localhost:4000/ 预览效果</div></pre></td></tr></table></figure><h3 id="10-预览没有问题后，执行如下操作部署到github"><a href="#10-预览没有问题后，执行如下操作部署到github" class="headerlink" title="10.预览没有问题后，执行如下操作部署到github"></a>10.预览没有问题后，执行如下操作部署到github</h3><ul><li><p>hexo clean</p></li><li><p>hexo generate</p></li><li><p>hexo deploy</p></li><li><p>访问<a href="http://aloneSingingStar.github.io" target="_blank" rel="external">http://aloneSingingStar.github.io</a></p></li></ul><h3 id="11-配置主题"><a href="#11-配置主题" class="headerlink" title="11.配置主题"></a>11.配置主题</h3><p><strong>主题网址：</strong><a href="https://hexo.io/themes/" target="_blank" rel="external">主题网址</a><br>我使用的是yilia,步骤如下：</p><p>1.使用ssh方式克隆项目到themes目录下的yilia目录<br>git clone git@github.com:litten/hexo-theme-yilia.git themes/yilia</p><p>2.修改aloneSingingStar.github.io目录下的_config.yml中的主题<br>theme:yilia</p><p>3.具体样式可以修改yilia目录下的_config.yml文件</p><h3 id="12-配置百度统计（只能后台统计，无法前台展示）"><a href="#12-配置百度统计（只能后台统计，无法前台展示）" class="headerlink" title="12.配置百度统计（只能后台统计，无法前台展示）"></a>12.配置百度统计（只能后台统计，无法前台展示）</h3><ul><li>注册百度统计站长版</li><li><p>注册成功后，会得到一段代码，其中有一段是：hm.src = “<a href="https://hm.baidu.com/hm.js?这里是你的唯一code" target="_blank" rel="external">https://hm.baidu.com/hm.js?这里是你的唯一code</a>;<br>把code填写到yilia主题目录下的_config.yml中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Miscellaneous</div><div class="line">baidu_analytics: &apos;填写你的code&apos;</div><div class="line">google_analytics: false</div></pre></td></tr></table></figure></li><li><p><a href="https://tongji.baidu.com" target="_blank" rel="external">百度统计网址</a></p></li></ul><h3 id="13-配置不蒜子，在网页显示访问量"><a href="#13-配置不蒜子，在网页显示访问量" class="headerlink" title="13.配置不蒜子，在网页显示访问量"></a>13.配置不蒜子，在网页显示访问量</h3><p>我修改的是/Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io/themes/yilia/layout/_partial/footer.ejs文件<br>其中不蒜子我没有下载到本地，是直接引用的<script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"></script></p><p>参考的是这个人的配置（<a href="https://github.com/sssvip/blog-data/blob/master/themes/yilia/layout/_partial/footer.ejs）" target="_blank" rel="external">https://github.com/sssvip/blog-data/blob/master/themes/yilia/layout/_partial/footer.ejs）</a></p><h3 id="14-提交hexo分支上的修改"><a href="#14-提交hexo分支上的修改" class="headerlink" title="14.提交hexo分支上的修改"></a>14.提交hexo分支上的修改</h3><ul><li>1.git status 查看代码修改</li></ul><p>➜ /Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io git:(hexo) ✗ &gt;git status<br>On branch hexo<br>Changes to be committed:<br>  (use “git reset HEAD <file>…” to unstage)</file></p><pre><code>modified:   _config.ymlmodified:   package.jsonnew file:   &quot;source/_posts/hexo\346\220\255\345\273\272\345\215\232\345\256\242.md&quot;</code></pre><p>Untracked files:<br>  (use “git add <file>…” to include in what will be committed)</file></p><pre><code>themes/hexo-theme-spfk/themes/next/themes/yilia/</code></pre><ul><li><p>2.可以看到，有2个modified,一个new file,还有未被加入本地仓库的文件夹，这3个文件夹是我下载的主题，其中我配置了一些私密信息，比如，百度统计的唯一code、支付宝、微信打赏图片等，我不想上传，如果你想上传，可以使用:[git add .]将所有这个文件夹下的文件提交到本地仓库</p></li><li><p>3.git commit -m “描述”<br>如果这个文件已经提交到了远程仓库，本地做了修改，想再提交到远程仓库，如果只执行 git commit -m “描述” 是不行的，会报如下问题：</p></li></ul><p>➜ /Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io git:(hexo) ✗ &gt;git commit -m “配置说明修改”<br>On branch hexo<br>Changes not staged for commit:<br>        modified:   “source/_posts/hexo\346\220\255\345\273\272\345\215\232\345\256\242.md”</p><p>Untracked files:<br>        themes/hexo-theme-spfk/<br>        themes/next/<br>        themes/yilia/</p><p>no changes added to commit</p><p>说明已跟踪文件的内容发生了变化，但还没有放到暂存区。要暂存这次更新，需要运行 git add 命令，然后再提交</p><ul><li><p>4.如果修改了很多个文件，那么一个个的去[git add 被修改的文件],然后再提交，会很麻烦，所以可以先使用[git status],查看所有未提交的文件，然后把不想提交的文件或者文件夹在[.gitignore]文件中过滤掉，这样的话，就可以直接使用[git add .]将所有未提交的提交到本地仓库</p></li><li><p>5.git push origin hexo</p></li><li><p>6.git pull origin hexo</p></li></ul><h3 id="15-在博客的md文件中，加入截断标签"><a href="#15-在博客的md文件中，加入截断标签" class="headerlink" title="15.在博客的md文件中，加入截断标签"></a>15.在博客的md文件中，加入截断标签</h3><p>如果没有加，一篇博客有多长，就展示多长，我们想要的效果是，在主页每篇博客只显示一部分，点击more后再进入详细页面</p><p>1.在需要截断的地方加入如下标签：<!-- more --></p><p>2.在/Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io/themes/yilia/_config.yml文件中，加入：<br>excerpt_link: more</p><h3 id="16-给文章设置tag-用于搜索"><a href="#16-给文章设置tag-用于搜索" class="headerlink" title="16 给文章设置tag,用于搜索"></a>16 给文章设置tag,用于搜索</h3><p>每篇生成的博客都有如下格式：可添加多个tag</p><hr><p>title: hexo搭建博客<br>date: 2017-09-10 13:48:42<br>tags:</p><ul><li>tag1</li><li>tag2</li><li>tag3</li></ul><hr><h3 id="17-绑定域名"><a href="#17-绑定域名" class="headerlink" title="17 绑定域名"></a>17 绑定域名</h3><ul><li>1.购买域名，我购买的是阿里云的</li><li>2.域名解析：进入阿里云控制台，点击添加解析，【记录类型：A】【主机记录：@】【解析线路：默认】【记录值：ip(ping alonesingingstar.github.io得到的IP）】，然后保存即可<br>注：记录类型:CNAME , 记录值:alonesingingstar.github.io  是不行的，因为alonesingingstar.github.io不是顶级域名，没有备案的</li><li>3.在alonesingingstar.github.io/source目录下新建CNAME文件，里面内容是你买的域名</li><li>4.重新部署，然后用你的域名访问网站，我的是：<a href="http://alonesingingstar.site">http://alonesingingstar.site</a></li></ul><h3 id="18-网站SEO优化"><a href="#18-网站SEO优化" class="headerlink" title="18 网站SEO优化"></a>18 网站SEO优化</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p><a href="http://zhanzhang.baidu.com/college/articleinfo?id=1003" target="_blank" rel="external">http://zhanzhang.baidu.com/college/articleinfo?id=1003</a></p><ul><li>1.进入百度站长平台：<a href="http://zhanzhang.baidu.com/dashboard/index" target="_blank" rel="external">http://zhanzhang.baidu.com/dashboard/index</a></li><li>2.点击添加站点，输入你购买的域名</li><li>3.勾选站点属性</li><li>4.验证网站，我选择的是【CNAME验证】,具体做法：在购买域名的网站（我的是阿里云）进行域名解析：点击添加解析，【记录类型：CNAME】【主机记录：C3bHznfyDD(这个值我乱写的，真实值按百度站长平台提供的来写)】【解析线路：默认】【记录值：zz.baidu.com(必须是这个，之前我写成了我自己的域名)】，然后保存即可</li></ul><p>CNAME验证<br>请将 C3bHznfyDD.alonesingingstar.site 使用CNAME解析到zz.baidu.com<br>完成操作后请点击“完成验证”按钮。<br>为保持验证通过的状态,成功验证后请不要删除该DNS记录</p><p>结果：不到一分钟前alonesingingstar.site使用CNAME验证验证失败，原因：没有找到对应的DNS CNAME记录。<br>问题分析&amp;解决办法： 请检查dns域名指向是否正确，dns生效一般需要几分钟到1天左右，请耐心等待。</p><p>等待一段时间后：</p><p>alonesingingstar.site验证成功！<br>该网站为主站，您可以批量添加子站并查看数据，<br>无需再次验证。帮助</p><ul><li>5.打开百度，搜索 【site:你的域名】，看能不能搜索到</li></ul><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p>进入百度统计的管理页面：<a href="https://tongji.baidu.com" target="_blank" rel="external">https://tongji.baidu.com</a><br>点击新增网站，【网站域名：你购买的域名】,其他随便填，然后你点击获取代码,找到如下代码：hm.src = “<a href="https://hm.baidu.com/hm.js?这里是你的唯一code;然后可参照上面" target="_blank" rel="external">https://hm.baidu.com/hm.js?这里是你的唯一code;然后可参照上面</a> 12.配置百度统计（只能后台统计，无法前台展示）的配置</p><p>结果：一直没有统计数据</p><p>可能原因：可能要等一段时间，待验证</p><h3 id="19-生成网站地图"><a href="#19-生成网站地图" class="headerlink" title="19 生成网站地图"></a>19 生成网站地图</h3><ul><li>1.安装插件：npm i hexo-generator-sitemap hexo-generator-baidu-sitemap -S</li><li>2.配置根目录下的_config.yml</li></ul><p>sitemap:<br>    path: sitemap.xml<br>baidusitemap:<br>    path: baidusitemap.xml</p><p>url: <a href="http://alonesingingstar.site/(你的网址">http://alonesingingstar.site/(你的网址</a>)<br>root: /<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:</p><ul><li>3.部署，部署后会生成sitemap.xml、baidusitemap.xml文件（这两者的区别在于 baidusitemap.xml 是百度搜索引擎的专用文件,另一个是通用）</li></ul><h3 id="20-向百度提交链接-在百度站长平台设置"><a href="#20-向百度提交链接-在百度站长平台设置" class="headerlink" title="20 向百度提交链接(在百度站长平台设置)"></a>20 向百度提交链接(在百度站长平台设置)</h3><p><a href="http://zhanzhang.baidu.com/linksubmit/index" target="_blank" rel="external">http://zhanzhang.baidu.com/linksubmit/index</a></p><h4 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h4><ul><li>1、主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</li><li>2、自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</li><li>3、sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。</li><li>4、手动提交：一次性提交链接给百度，可以使用此种方式。</li></ul><p>具体配置方式可以参考百度站长平台/网页抓取/链接提交 中</p><h4 id="推送方式–主动推送"><a href="#推送方式–主动推送" class="headerlink" title="推送方式–主动推送"></a>推送方式–主动推送</h4><ul><li>1.安装插件:npm i hexo-baidu-url-submit -S</li><li><p>2.根目录下配置_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">- type: git</div><div class="line">  repository: git@github.com:aloneSingingStar/aloneSingingStar.github.io.git</div><div class="line">  branch: master</div><div class="line">- type: baidu_url_submitter</div><div class="line">#主动提交链接到百度</div><div class="line">baidu_url_submit:</div><div class="line">  count: 10 # 提交最新的链接数</div><div class="line">  host: alonesingingstar.site # 在百度站长平台中注册的域名,虽然官方推荐要带有 www, 但可以不带.</div><div class="line">  token: 密钥值 # 你的秘钥,每个人都不一样,在百度站长平台/网页抓取/链接提交/自动提交/主动推送 下面可以找到</div><div class="line">  path: baidu_urls.txt # 文本文档的地址,新链接会保存在此文本文档里</div></pre></td></tr></table></figure></li><li><p>3.重新部署，新的链接就会被推送上去<br>部署成功可以看到控制台有如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">INFO  Deploying: baidu_url_submitter</div><div class="line">INFO  Submitting urls</div><div class="line">http://alonesingingstar.site/2017/09/10/hexo搭建博客/</div><div class="line">http://alonesingingstar.site/2017/09/09/hello-world/</div><div class="line">&#123;&quot;remain&quot;:4999998,&quot;success&quot;:2&#125;</div><div class="line">INFO  Deploy done: baidu_url_submitter</div></pre></td></tr></table></figure></li></ul><p>到百度站长/站点管理/网页抓取/链接提交 中并没有看到提交的链接，需要等一段时间（可能要一两天），然后使用site:你的域名，才能搜索到<br>具体原因如下：<a href="http://tengj.top/2016/03/14/baidunoshouluresson/" target="_blank" rel="external">http://tengj.top/2016/03/14/baidunoshouluresson/</a></p><p>9/12 下午16:29，使用百度搜索：site:alonesingingstar.site，已经可以搜索到了</p><h3 id="21-向谷歌提交链接"><a href="#21-向谷歌提交链接" class="headerlink" title="21 向谷歌提交链接"></a>21 向谷歌提交链接</h3><p>具体步骤：进入谷歌站长页面（<a href="https://www.google.com/webmasters/，用你的谷歌账户登录，然后点击添加属性，输入你的网址）" target="_blank" rel="external">https://www.google.com/webmasters/，用你的谷歌账户登录，然后点击添加属性，输入你的网址）</a><br>1.下载HTML验证文件（在内容中加入layout: false,网上说hexo会编译这个文件，设置这个不让它编译）<br>2.将该文件放到/Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io/source目录下。<br>3.重新部署网站<br>4.通过在浏览器中访问 <a href="http://alonesingingstar.site/google2f21809f4cc6b2ea.html">http://alonesingingstar.site/google2f21809f4cc6b2ea.html</a> 确认上传成功。<br>6.点击验证<br>7.进入谷歌的Search Console，点击站点地图/添加站点地图,比如我的是<a href="http://alonesingingstar.site/sitemap.xml,添加后就能抓取到">http://alonesingingstar.site/sitemap.xml,添加后就能抓取到</a><br>结果：您无权使用此资源。请验证此资源，或请资源所有者将您添加为用户，要等一段时间<br>等一段时间后：<br>恭喜！您已成功验证您对 <a href="http://alonesingingstar.site/">http://alonesingingstar.site/</a> 网站的所有权。<br>继续</p><p>使用谷歌搜索：site:alonesingingstar.site，暂时还搜索不到，先等吧</p><p>进入站长页面的Search Console，点击Google抓取工具，点击抓取，一定要请求将网址和链接页编入索引，然后使用site:alonesingingstar.site搜索，就能搜索到了</p><h3 id="22-提升排名"><a href="#22-提升排名" class="headerlink" title="22.提升排名"></a>22.提升排名</h3><ul><li><p>博客根目录 _config.yml 文件进行如下修改，关键字英文逗号隔开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Site</div><div class="line">title: 网站名称</div><div class="line">description: 网站描述</div><div class="line">author: 作者姓名</div><div class="line">subtitle: 作者简介</div><div class="line">language: zh-CN</div><div class="line">timezone:</div><div class="line">keywords: Web,HTML # 博客关键字</div></pre></td></tr></table></figure></li><li><p>文章中加入关键字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: ###</div><div class="line">date: ###</div><div class="line">categories: ###</div><div class="line">tags: ###</div><div class="line">keywords: ###</div><div class="line">description: ###</div><div class="line">---</div></pre></td></tr></table></figure></li><li><p>文章路径简化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Hexo 默认的文章链接形式为 domain/year/month/day/postname，默认就是一个四级 url，并且可能造成 url 过长，对搜索引擎是十分不友好的。我们可以改成 domain/postname 的形式。编辑站点 _config.yml 文件，修改其中的 permalink 字段改为:</div><div class="line">permalink: :title.html</div></pre></td></tr></table></figure></li></ul><h3 id="23-加入友言评论系统"><a href="#23-加入友言评论系统" class="headerlink" title="23 加入友言评论系统"></a>23 加入友言评论系统</h3><ul><li>1.注册账号：<a href="http://www.uyan.cc/" target="_blank" rel="external">http://www.uyan.cc/</a></li><li>2.注册成功后，可以看到一段代码，复制下来，在/Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io/themes/yilia/layout/_partial/post下新建uyan.ejs文件,将内容粘贴进去</li><li>3.找到/Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io/themes/yilia/layout/_partial/article.ejs文件，找到【&lt;% if (!index &amp;&amp; post.comments){ %&gt;】这行代码,在后面加入：【&lt;% if (theme.uyan){ %&gt;&lt;%- partial(‘post/uyan’, {key: post.slug,title: post.title,url: config.url+url_for(post.path)}) %&gt;&lt;% } %&gt; 】</li><li>4.进入后台管理，可以看到你的用户ID，复制这个ID，然后在/Users/aloneSingingStar/xyb/blog/aloneSingingStar.github.io/themes/yilia/_config.yml中加入：uyan: ‘你的ID’</li><li>5.重新部署</li></ul>]]></content>
    
    <summary type="html">
    
      hexo,github搭建个人博客,使用yilia主题,SEO优化
    
    </summary>
    
      <category term="hexo" scheme="http://alonesingingstar.site/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://alonesingingstar.site/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://alonesingingstar.site/hello-world.html"/>
    <id>http://alonesingingstar.site/hello-world.html</id>
    <published>2017-09-09T09:11:24.000Z</published>
    <updated>2017-09-12T12:31:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="default" scheme="http://alonesingingstar.site/categories/default/"/>
    
    
      <category term="hello world" scheme="http://alonesingingstar.site/tags/hello-world/"/>
    
  </entry>
  
</feed>
